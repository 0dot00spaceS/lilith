apply from: 'dependencyDefinitions.gradle'

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
}

project(':lilith-sender') {
	archivesBaseName = 'de.huxhorn.lilith.sender'
	description = 'This file is part of Lilith. It contains the event sender definition.'
	dependencies {
		compile libraries.'slf4j-api'
		compile libraries.'sulky-io'
	}
}

project(':lilith-data-converter') {
	archivesBaseName = 'de.huxhorn.lilith.data.converter'
	description = 'This file is part of Lilith. It contains the Converter interface and registry.'
	dependencies {
		testCompile libraries.'sulky-junit'
	}
}

project(':lilith-data-eventsource') {
	archivesBaseName = 'de.huxhorn.lilith.data.eventsource'
	description = 'This file is part of Lilith. It contains the EventSource datatype and related classes.'
	dependencies {
		testCompile libraries.'sulky-junit'
	}
}

project(':lilith-data-eventsource-xml') {
	archivesBaseName = 'de.huxhorn.lilith.data.eventsource-xml'
	description = 'This file is part of Lilith. It contains XML I/O for EventSource.'
	dependencies {
		compile project(':lilith-data-eventsource')
		compile libraries.'sulky-stax'
		compile libraries.'stax-api'
		testCompile libraries.'stax'
	}
}

project(':lilith-data-logging') {
	archivesBaseName = 'de.huxhorn.lilith.data.logging'
	description = 'This file is part of Lilith. It contains the LoggingEvent datatype and related classes.'
	dependencies {
		compile project(':lilith-data-eventsource')
		compile libraries.'sulky-formatting'
		testCompile libraries.'sulky-junit'
	}
}

project(':lilith-data-logging-io-test') {
	archivesBaseName = 'de.huxhorn.lilith.data.logging-io-test'
	description = 'This file is part of Lilith. It contains a Baseclass for LoggingEvent-De/Serializer tests.'
	dependencies {
		compile project(':lilith-data-eventsource')
		compile project(':lilith-data-logging')
		compile libraries.'sulky-formatting'
		compile libraries.'sulky-junit'
		compile libraries.junit
		compile libraries.'slf4j-api'
	}
}

project(':lilith-data-logging-xml') {
	archivesBaseName = 'de.huxhorn.lilith.data.logging-xml'
	description = 'This file is part of Lilith. It contains XML I/O for LoggingEvent.'
	dependencies {
		compile project(':lilith-data-logging')
		compile project(':lilith-data-eventsource-xml')
		compile libraries.'sulky-stax'
		compile libraries.'stax-api'
		testCompile libraries.'stax'
		testCompile project(':lilith-data-eventsource')
	}
}

project(':lilith-data-logging-xml-serializer') {
	archivesBaseName = 'de.huxhorn.lilith.data.logging-xml-serializer'
	description = 'This file is part of Lilith. It contains XML De/Serializer for LoggingEvent.'
	dependencies {
		compile project(':lilith-data-logging-xml')
		compile libraries.'sulky-codec'
		compile libraries.'sulky-io'
		compile libraries.'sulky-stax'
		compile libraries.'stax-api'
		testCompile libraries.'stax'
		testCompile project(':lilith-data-logging')
		testCompile project(':lilith-data-logging-io-test')
		testCompile project(':lilith-data-eventsource')
	}
}

project(':lilith-data-logging-protobuf') {
	archivesBaseName = 'de.huxhorn.lilith.data.logging.protobuf'
	description = 'This file is part of Lilith. It contains the Logging Protobuf classes.'
	dependencies {
		compile project(':lilith-data-logging')
		compile libraries.'protobuf'
		compile libraries.'sulky-codec'
		testCompile project(':lilith-data-logging-io-test')
		testCompile project(':lilith-data-eventsource')
	}
}

project(':lilith-data-logging-json-serializer') {
	archivesBaseName = 'de.huxhorn.lilith.data.logging-json-serializer'
	description = 'This file is part of Lilith. It contains JSON De/Serializer for LoggingEvent.'
	dependencies {
		compile project(':lilith-data-logging')
		compile libraries.'sulky-codec'
		compile libraries.'sulky-io'
		compile libraries.'jackson-mapper'
		testCompile project(':lilith-data-logging-io-test')
		testCompile project(':lilith-data-eventsource')
	}
}

project(':lilith-data-access') {
	archivesBaseName = 'de.huxhorn.lilith.data.access'
	description = 'This file is part of Lilith. It contains the AccesEvent datatype and related classes.'
	dependencies {
		compile project(':lilith-data-eventsource')
		testCompile libraries.'sulky-junit'
	}
}

project(':lilith-data-access-protobuf') {
	archivesBaseName = 'de.huxhorn.lilith.data.access.protobuf'
	description = 'This file is part of Lilith. It contains the Access Protobuf classes.'
	dependencies {
		compile project(':lilith-data-access')
		compile libraries.'protobuf'
		compile libraries.'sulky-codec'
		testCompile project(':lilith-data-eventsource')
	}
}

project(':lilith-constants') {
	archivesBaseName = 'de.huxhorn.lilith.constants'
	description = 'This file is part of Lilith. It contains part of the Lilith API (Constants).'
	//dependencies {
	//}
}

project(':lilith-engine') {
	archivesBaseName = 'de.huxhorn.lilith.engine'
	description = 'This file is part of Lilith. It contains the engine part of Lilith.'
	dependencies {
		compile project(':lilith-constants')
		compile project(':lilith-sender')
		compile project(':lilith-data-eventsource')
		compile project(':lilith-data-logging')
		compile project(':lilith-data-logging-protobuf')
		compile project(':lilith-data-access')
		compile project(':lilith-data-access-protobuf')
		compile libraries.'sulky-codec-filebuffer'
		compile libraries.'sulky-buffers'
		compile libraries.'sulky-conditions'
		compile libraries.'sulky-io'
		compile libraries.'sulky-codec'
		compile libraries.'slf4j-api'
	}
}

project(':lilith-xml-logging') {
	archivesBaseName = 'de.huxhorn.lilith.xml-logging'
	description = 'This file is part of Lilith. It contains XML logging classes.'
	dependencies {
		compile libraries.'slf4j-api'
		compile libraries.'sulky-io'
		compile libraries.'stax-api'
		compile libraries.'sulky-buffers'
		compile libraries.'sulky-codec'
		compile project(':lilith-engine')
		compile project(':lilith-data-logging-xml-serializer')
	}
}

project(':lilith-json-logging') {
	archivesBaseName = 'de.huxhorn.lilith.json-logging'
	description = 'This file is part of Lilith. It contains JSON logging classes.'
	dependencies {
		compile libraries.'slf4j-api'
		compile libraries.'sulky-io'
		compile libraries.'sulky-buffers'
		compile libraries.'sulky-codec'
		compile project(':lilith-engine')
		compile project(':lilith-data-logging-json-serializer')
	}
}

project(':logback-classic') {
	archivesBaseName = 'de.huxhorn.lilith.logback.classic'
	description = 'This file is part of Lilith. It contains an NDC implementation that can be used in conjunction with the lilith appenders to get NDC functionality in Logback.'
	dependencies {
		compile project(':lilith-data-logging')
	}
}

project(':logback-logging-adapter') {
	archivesBaseName = 'de.huxhorn.lilith.logback.logging-adapter'
	description = 'This file is part of Lilith. It contains the adapter to translate from logback to lilith logging events.'
	dependencies {
		compile project(':lilith-data-logging')
		compile project(':logback-classic')
		compile libraries.'sulky-codec'
		compile libraries.'slf4j-api'
		compile libraries.'logback-classic'
	}
}

project(':logback-access-adapter') {
	archivesBaseName = 'de.huxhorn.lilith.logback.access-adapter'
	description = 'This file is part of Lilith. It contains the adapter to translate from logback to lilith access events.'
	dependencies {
		compile project(':lilith-data-access')
		compile libraries.'sulky-codec'
		compile libraries.'logback-access'
	}
}

project(':logback-producer-classic') {
	archivesBaseName = 'de.huxhorn.lilith.logback.producer.classic'
	description = 'This file is part of Lilith. It contains event producers.'
	dependencies {
		compile libraries.'logback-classic'
		compile project(':lilith-engine')
		compile project(':lilith-data-logging')
		compile project(':logback-logging-adapter')
		compile libraries.'sulky-buffers'
		compile libraries.'slf4j-api'
	}
}

project(':logback-producer-access') {
	archivesBaseName = 'de.huxhorn.lilith.logback.producer.access'
	description = 'This file is part of Lilith. It contains event producers.'
	dependencies {
		compile libraries.'logback-access'
		compile project(':lilith-engine')
		compile project(':lilith-data-access')
		compile project(':logback-access-adapter')
		compile libraries.'sulky-buffers'
		compile libraries.'slf4j-api'
	}
}

project(':logback-multiplex-appender-core') {
	archivesBaseName = 'de.huxhorn.lilith.logback.appender.multiplex-core'
	description = 'This file is part of Lilith. It contains the multiplexing appender core classes.'
	dependencies {
		compile project(':lilith-sender')
		compile libraries.'sulky-codec'
		compile libraries.'logback-core'
	}
}

project(':logback-multiplex-appender-classic') {
	archivesBaseName = 'de.huxhorn.lilith.logback.appender.multiplex-classic'
	description = 'This file is part of Lilith. It contains the multiplexing logging appender.'
	dependencies {
		compile libraries.'sulky-codec'
		compile project(':lilith-data-logging-protobuf')
		compile project(':logback-multiplex-appender-core')
		compile project(':logback-logging-adapter')
		compile libraries.'logback-classic'
	}
}

project(':logback-multiplex-appender-access') {
	archivesBaseName = 'de.huxhorn.lilith.logback.appender.multiplex-access'
	description = 'This file is part of Lilith. It contains the multiplexing access appender.'
	dependencies {
		compile libraries.'sulky-codec'
		compile project(':logback-multiplex-appender-core')
		compile project(':lilith-data-access')
		compile project(':lilith-data-access-protobuf')
		compile project(':logback-access-adapter')
		compile libraries.'logback-access'
	}
}

project(':logback-multiplex-appender-classic-xml') {
	archivesBaseName = 'de.huxhorn.lilith.logback.appender.multiplex-classic-xml'
	description = 'This file is part of Lilith. It contains the multiplexing logging appender (XML).'
	dependencies {
		compile libraries.'sulky-codec'
		compile project(':lilith-data-logging-xml-serializer')
		compile project(':logback-multiplex-appender-core')
		compile project(':logback-logging-adapter')
		compile libraries.'logback-classic'
	}
}

project(':logback-multiplex-appender-classic-json') {
	archivesBaseName = 'de.huxhorn.lilith.logback.appender.multiplex-classic-json'
	description = 'This file is part of Lilith. It contains the multiplexing logging appender (JSON).'
	dependencies {
		compile libraries.'sulky-codec'
		compile project(':lilith-data-logging-json-serializer')
		compile project(':logback-multiplex-appender-core')
		compile project(':logback-logging-adapter')
		compile libraries.'logback-classic'
	}
}

project(':logback-shutdown-context-listener') {
	archivesBaseName = 'de.huxhorn.lilith.logback.servlet'
	description = 'This file is part of Lilith. It contains a ServletContextListener that shuts down logback.'
	dependencies {
		compile libraries.'slf4j-api'
		compile libraries.'servlet-api'
		compile libraries.'logback-classic'
	}
}

project(':logback-encoder-core') {
	archivesBaseName = 'de.huxhorn.lilith.logback.encoder.core'
	description = 'This file is part of Lilith. It contains the encoder base class.'
	dependencies {
		compile project(':lilith-constants')
		compile libraries.'logback-core'
		compile libraries.'sulky-codec'
		compile libraries.'sulky-codec-filebuffer'
	}
}

project(':logback-encoder-classic') {
	archivesBaseName = 'de.huxhorn.lilith.logback.encoder.classic'
	description = 'This file is part of Lilith. It contains the classic encoder.'
	dependencies {
		compile libraries.'slf4j-api'
		compile libraries.'sulky-codec'
		compile project(':logback-encoder-core')
		compile project(':logback-logging-adapter')
		compile project(':lilith-data-logging-protobuf')
		compile libraries.'logback-core'
		compile libraries.'logback-classic'
		testCompile project(':lilith-constants')
	}
}

project(':logback-encoder-access') {
	archivesBaseName = 'de.huxhorn.lilith.logback.encoder.access'
	description = 'This file is part of Lilith. It contains the access encoder.'
	dependencies {
		compile libraries.'sulky-codec'
		compile project(':logback-encoder-core')
		compile project(':lilith-data-access-protobuf')
		compile project(':logback-access-adapter')
		compile libraries.'logback-core'
		compile libraries.'logback-access'
	}
}

project(':log4j-throwable-parser') {
	archivesBaseName = 'de.huxhorn.lilith.log4j.throwable'
	description = 'This file is part of Lilith. It contains the Log4j ThrowableInfo-Parser.'
	dependencies {
		compile project(':lilith-data-logging')
		compile libraries.'slf4j-api'
	}
}

project(':log4j-xml') {
	archivesBaseName = 'de.huxhorn.lilith.log4j.xml'
	description = 'This file is part of Lilith. It contains LOG4J XML I/O.'
	dependencies {
		compile project(':lilith-data-logging')
		compile project(':log4j-throwable-parser')
		compile libraries.'sulky-stax'
		compile libraries.'sulky-tasks'
		compile libraries.'sulky-buffers'
		compile libraries.'slf4j-api'
		compile libraries.'commons-io'
		compile libraries.'sulky-io'
		compile libraries.'stax-api'
		testRuntime libraries.'stax'
		testCompile project(':lilith-data-eventsource')
	}
}

project(':log4j-producer') {
	archivesBaseName = 'de.huxhorn.lilith.log4j.producer'
	description = 'This file is part of Lilith. It contains the LOG4J Producer.'
	dependencies {
		compile project(':lilith-data-logging')
		compile project(':log4j-throwable-parser')
		compile libraries.'sulky-buffers'
		compile project(':lilith-engine')
		compile libraries.'slf4j-api'
		compile libraries.'log4j'
	}
}

project(':jul-xml') {
	archivesBaseName = 'de.huxhorn.lilith.jul.xml'
	description = 'This file is part of Lilith. It contains java.util.logging XML I/O.'
	dependencies {
		compile project(':lilith-data-logging')
		compile libraries.'sulky-stax'
		compile libraries.'slf4j-api'
		compile libraries.'commons-io'
		compile libraries.'sulky-io'
		compile libraries.'stax-api'
		testRuntime libraries.'stax'
		testCompile project(':lilith-data-eventsource')
	}
}

project(':jul-xml-import') {
	archivesBaseName = 'de.huxhorn.lilith.jul.xml-import'
	description = 'This file is part of Lilith. It contains java.util.logging XML-Import.'
	dependencies {
		compile project(':lilith-data-logging')
		compile project(':jul-xml')
		compile libraries.'sulky-stax'
		compile libraries.'sulky-tasks'
		compile libraries.'sulky-buffers'
		compile libraries.'slf4j-api'
		compile libraries.'commons-io'
		compile libraries.'sulky-io'
		compile libraries.'stax-api'
		testRuntime libraries.'stax'
		testCompile project(':lilith-data-eventsource')
	}
}

project(':jul-xml-receiver') {
	archivesBaseName = 'de.huxhorn.lilith.jul.xml.receiver'
	description = 'This file is part of Lilith. It contains java.util.logging XML I/O.'
	dependencies {
		compile project(':lilith-data-logging')
		compile project(':jul-xml')
		compile project(':lilith-engine')
		compile libraries.'sulky-stax'
		compile libraries.'sulky-buffers'
		compile libraries.'slf4j-api'
		compile libraries.'commons-io'
		compile libraries.'sulky-io'
		compile libraries.'stax-api'
		testRuntime libraries.'stax'
		testCompile project(':lilith-data-eventsource')
	}
}

project(':jul-slf4j-handler') {
	archivesBaseName = 'de.huxhorn.lilith.jul-slf4j-handler'
	description = 'This file is part of Lilith. It\'s a java.util.logging to slf4j bridge handler.'
	dependencies {
		compile libraries.'slf4j-api'
	}
}

project(':lilith-sounds') {
	archivesBaseName = 'de.huxhorn.lilith.sounds'
	description = 'This file is part of Lilith. It contains the sound files of Lilith.'
	//dependencies {
	//}
}

project(':lilith-prefs') {
	archivesBaseName = 'de.huxhorn.lilith.prefs'
	description = 'This file is part of Lilith. It contains the Preferences Protobuf classes.'
	dependencies {
		compile libraries.'sulky-codec'
		compile libraries.'protobuf'
	}
}

project(':lilith-conditions') {
	archivesBaseName = 'de.huxhorn.lilith.conditions'
	description = 'This file is part of Lilith. It contains conditions.'
	dependencies {
		compile project(':lilith-data-eventsource')
		compile project(':lilith-data-logging')
		compile project(':lilith-data-access')
		compile libraries.'sulky-conditions'
		compile libraries.'sulky-groovy'
		compile libraries.'slf4j-api'
		compile libraries.'groovy'
	}
}

project(':lilith') {
	archivesBaseName = 'de.huxhorn.lilith'
	description = 'Lilith is a logging and access event viewer for the Logback logging framework. It has features comparable to Chainsaw, a logging event viewer for log4j. This means that it can receive logging events from remote applications using Logback as their logging backend. It uses files to buffer the received events locally, so it is possible to keep vast amounts of logging events at your fingertip while still being able to check only the ones you are really interested in by using filtering conditions.'
	dependencies {
		compile libraries.'commons-io'
		compile libraries.'commons-lang'
		compile libraries.'flyingsaucer'
		compile libraries.'glazedlists'
		compile libraries.'groovy'
		compile libraries.'groovy-console'
		compile libraries.'groovy-xml'
		compile libraries.'httpclient'
		compile libraries.'httpcore'
		compile libraries.'jcommander'
		compile libraries.'jmdns'
		compile libraries.'junique'
		compile libraries.'logback-access'
		compile libraries.'logback-classic'
		compile libraries.'logback-core'
		compile libraries.'macify'
		compile libraries.'rrd4j'
		compile libraries.'servlet-api'
		compile libraries.'slf4j-api'
		compile libraries.'sulky-buffers'
		compile libraries.'sulky-buffers-filtering'
		compile libraries.'sulky-buffers-table'
		compile libraries.'sulky-codec'
		compile libraries.'sulky-codec-filebuffer'
		compile libraries.'sulky-conditions'
		compile libraries.'sulky-formatting'
		compile libraries.'sulky-groovy'
		compile libraries.'sulky-io'
		compile libraries.'sulky-logging'
		compile libraries.'sulky-sounds-api'
		compile libraries.'sulky-sounds-impl-jlayer'
		compile libraries.'sulky-swing'
		compile libraries.'sulky-tasks'
		compile project(':jul-slf4j-handler')
		compile project(':jul-xml')
		compile project(':jul-xml-import')
		compile project(':jul-xml-receiver')
		compile project(':lilith-conditions')
		compile project(':lilith-data-access')
		compile project(':lilith-data-logging')
		compile project(':lilith-data-logging-protobuf')
		compile project(':lilith-engine')
		compile project(':lilith-json-logging')
		compile project(':lilith-prefs')
		compile project(':lilith-xml-logging')
		compile project(':log4j-producer')
		compile project(':log4j-xml')
		compile project(':logback-logging-adapter')
		compile project(':logback-multiplex-appender-access')
		compile project(':logback-multiplex-appender-classic')
		compile project(':logback-multiplex-appender-classic-json')
		compile project(':logback-multiplex-appender-classic-xml')
		compile project(':logback-producer-access')
		compile project(':logback-producer-classic')
		runtime libraries.'jcl-over-slf4j'
		runtime libraries.'jgoodies-looks'
		runtime libraries.'stax'
		runtime project(':lilith-sounds')
	}
}

project(':slf4j') {
	archivesBaseName = 'de.huxhorn.lilith.slf4j'
	description = 'This is a concept how SLF4J could be redesigned for Java>=5'
	dependencies {
		compile libraries.'slf4j-api'
		testRuntime project(':logback-multiplex-appender-classic')
	}
}

project(':tracing') {
	archivesBaseName = 'de.huxhorn.lilith.tracing'
	description = 'This module contains a tracing and profiling aspect.'
	dependencies {
		compile libraries.'aspectjrt'
		compile libraries.'slf4j-api'
		compile libraries.'sulky-formatting'
		testCompile libraries.'spring-beans'
		testCompile libraries.'spring-context'
		testCompile libraries.'spring-core'
		testRuntime libraries.'aspectjweaver'
		testRuntime libraries.'cglib-nodep'
		testRuntime libraries.'jcl-over-slf4j'
		testRuntime libraries.'spring-aop'
		testRuntime project(':logback-multiplex-appender-classic')
	}
}

